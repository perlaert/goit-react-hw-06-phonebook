{"version":3,"sources":["components/Filter/Filter.module.css","App.module.css","redux/phonebook/phonebook-actions.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","redux/phonebook/phonebook-reducer.js","redux/store.js","index.js","components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.module.css"],"names":["module","exports","addContact","createAction","name","number","payload","id","shortid","generate","deleteContact","changeFilter","ContactForm","state","handleChange","event","currentTarget","value","setState","handleSubmit","preventDefault","props","contacts","items","find","contact","toLowerCase","onSubmit","message","alert","className","style","contactForm","this","labelItem","type","onChange","pattern","required","title","btn","Component","propsTypes","PropTypes","func","isRequired","connect","dispatch","phonebookActions","ContactList","onDeleteContact","contactsList","map","contactItem","contactInfo","contactName","onClick","protTypes","arrayOf","shape","string","getVisibleContacts","allContacts","filter","normalizedFilter","includes","filterSection","filterInput","App","container","console","log","actions","createReducer","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","phonebookPersistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","phonebookReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.47ddca83.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterSection\":\"Filter_filterSection__kZIr9\",\"filterInput\":\"Filter_filterInput__u16Kg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\"};","import { createAction } from '@reduxjs/toolkit';\nimport shortid from 'shortid';\n\nconst addContact = createAction('phonebook/add', (name, number) => ({\n  payload: {\n    id: shortid.generate(),\n    name,\n    number,\n  },\n}));\n\nconst deleteContact = createAction('phonebook/delete');\n\nconst changeFilter = createAction('phonebook/changeFilter');\n\nexport default { addContact, deleteContact, changeFilter };\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport phonebookActions from '../../redux/phonebook/phonebook-actions';\nimport PropTypes from 'prop-types';\nimport style from './ContactForm.module.css';\n\nclass ContactForm extends Component {\n  static propsTypes = {\n    onSubmit: PropTypes.func.isRequired,\n  };\n\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = event => {\n    const { name, value } = event.currentTarget;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    const { name, number } = this.state;\n\n    const existingName = this.props.state.contacts.items.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase(),\n    );\n\n    if (!existingName) {\n      this.props.onSubmit(name, number);\n      this.setState({ name: '', number: '' });\n      return;\n    }\n    const message = `${name} is already in contacts`;\n    alert(message);\n  };\n\n  render() {\n    return (\n      <section>\n        <form className={style.contactForm} onSubmit={this.handleSubmit}>\n          <label className={style.labelItem}>\n            Name\n            <input\n              type=\"text\"\n              name=\"name\"\n              value={this.state.name}\n              onChange={this.handleChange}\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              // title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n              required\n            />\n          </label>\n          <label className={style.labelItem}>\n            Number\n            <input\n              type=\"tel\"\n              name=\"number\"\n              value={this.state.number}\n              onChange={this.handleChange}\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n              required\n            />\n          </label>\n          <button type=\"submit\" className={style.btn}>\n            Add contact{' '}\n          </button>\n        </form>\n      </section>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  state,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: (name, number) =>\n    dispatch(phonebookActions.addContact(name, number)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import { connect } from 'react-redux';\nimport phonebookActions from '../../redux/phonebook/phonebook-actions';\nimport PropTypes from 'prop-types';\nimport style from './ContactList.module.css';\n\nconst ContactList = ({ items, onDeleteContact }) => {\n  return (\n    <section>\n      <ul className={style.contactsList}>\n        {items.map(({ id, name, number }) => (\n          <li key={id} className={style.contactItem}>\n            <div className={style.contactInfo}>\n              <p className={style.contactName}>{name}:</p>\n              <p>{number}</p>\n            </div>\n            <button\n              className={style.btn}\n              type=\"button\"\n              onClick={() => onDeleteContact(id)}\n            >\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n};\n\nContactList.protTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }).isRequired,\n  ),\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nconst getVisibleContacts = (allContacts, filter) => {\n  const normalizedFilter = filter.toLowerCase();\n\n  return allContacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter),\n  );\n};\n\nconst mapStateToProps = ({ contacts: { items, filter } }) => ({\n  items: getVisibleContacts(items, filter),\n});\n\nconst mapDispatchtoProps = dispatch => ({\n  onDeleteContact: id => dispatch(phonebookActions.deleteContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchtoProps)(ContactList);\n","import { connect } from 'react-redux';\nimport phonebookActions from '../../redux/phonebook/phonebook-actions';\nimport PropTypes from 'prop-types';\nimport style from './Filter.module.css';\n\nconst Filter = ({ value = ' ', onChange }) => {\n  return (\n    <div className={style.filterSection}>\n      <label>\n        Find contacts by name\n        <input\n          className={style.filterInput}\n          type=\"text\"\n          value={value}\n          onChange={onChange}\n        ></input>\n      </label>\n    </div>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  value: state.contacts.filter,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: event =>\n    dispatch(phonebookActions.changeFilter(event.currentTarget.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import ContactForm from './components/ContactForm/ContactForm';\nimport ContactList from './components/ContactList/ContactList';\nimport Filter from './components/Filter/Filter';\nimport style from './App.module.css';\n\nconst App = () => {\n  return (\n    <section className={style.container}>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </section>\n  );\n};\n\nexport default App;\n","import { createReducer } from '@reduxjs/toolkit';\nimport { combineReducers } from 'redux';\nimport actions from './phonebook-actions';\n\nconsole.log(actions);\n\nconst items = createReducer([], {\n  [actions.addContact]: (state, { payload }) => [...state, payload],\n  [actions.deleteContact]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [actions.changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport phonebookReducer from './phonebook/phonebook-reducer';\nimport logger from 'redux-logger';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst phonebookPersistConfig = {\n  key: 'contacts',\n  storage,\n  blacklist: ['filter'],\n};\n\nconst store = configureStore({\n  reducer: {\n    contacts: persistReducer(phonebookPersistConfig, phonebookReducer),\n  },\n  middleware,\n  devTools: process.env.NODE_ENV !== 'production',\n});\n\nconst persistor = persistStore(store);\n\nexport default { store, persistor };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsList\":\"ContactList_contactsList__14Z-h\",\"contactItem\":\"ContactList_contactItem__EQAbQ\",\"contactInfo\":\"ContactList_contactInfo__2oqwW\",\"contactName\":\"ContactList_contactName__o8qv9\",\"btn\":\"ContactList_btn__1Xk4q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__OrlO3\",\"labelItem\":\"ContactForm_labelItem__19cGw\",\"btn\":\"ContactForm_btn__2Bpnz\"};"],"sourceRoot":""}